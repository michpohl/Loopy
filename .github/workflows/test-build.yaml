name: Build Loopy

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        id: checkout
        uses: actions/checkout@v3

      - name: Update version name and code
        id: expose
        run: |
          
          buildGradlePath="./app/build.gradle"
          versionCodeLine=$(grep "versionCode" $buildGradlePath)
          
          newCodeLine="        versionCode ${{ github.run_number }}"
          sed -i -r "s/$versionCodeLine/$newCodeLine/g" $buildGradlePath
          
          versionNameLine=$(grep "versionName" $buildGradlePath)
          
          oldVersionName=${versionNameLine#*versionName }
          oldVersionName=${oldVersionName%\"*}
          oldVersionName=${oldVersionName#\"*}
          
          if [[ $oldVersionName == *..* ]]; then
          oldVersionName=${oldVersionName//../.}
          fi
          
          newNameLine="        versionName \"$oldVersionName.${{ github.run_number }}\""
          sed -i -r "s/$versionNameLine/$newNameLine/g" $buildGradlePath
          
          echo "versionCode updated to $newVersionCode"
          echo "versionName updated to $oldVersionName.$newVersionName"

      - name: Print build.gradle for checking
        id: print
        run: |
          buildGradlePath="./app/build.gradle"

          while IFS= read -r line; do
          echo "$line"
          done < "$buildGradlePath"

      - name: Build the app
        id: build
        run: ./gradlew build

      - name: Sign app APK
        uses: r0adkll/sign-android-release@v1
        id: sign
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          alias: ${{ secrets.KS_A }}
          keyStorePassword: ${{ secrets.KS_PW }}
          keyPassword: ${{ secrets.KS_PR_PW }}

      - name: Check release
        run: |
          ls app/build/outputs/apk/release

#      - name: Publish release
#        uses: pipe-cd/actions-gh-release@v2.3.4
#        with:
#          release_file: 'app/build/outputs/apk/release/app-release-unsigned-signed.apk'
#          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_COMPRESS: xz
          GHR_PATH: app/build/outputs/apk/release/app-release-unsigned-signed.apk
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


#      - name: Deploy to Google
#        id: deploy
#        uses: r0adkll/upload-google-play@v1.0.15
#        with:
#          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
#          packageName: com.michaelpohl.loopyplayer2
#          releaseFiles: app/build/outputs/apk/release/app-release-unsigned-signed.apk
#          track: production
#          # inAppUpdatePriority: 2
#          # userFraction: 1
#          # whatsNewDirectory: distribution/whatsnew
#
#      - name: Add version Tag
#        run: |
#          git config --global user.email ${{ secrets.GIT_USER_EMAIL }}
#          git config --global user.name ${{ secrets.GIT_USER_NAME}}
#          git tag -a "v${{ env.COMBINED_OUTPUT }}" -m "This tag was auto-generated by the release build workflow"
#          git push origin "v${{ env.COMBINED_OUTPUT }}"
